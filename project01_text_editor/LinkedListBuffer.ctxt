#BlueJ class context
comment0.target=LinkedListBuffer
comment0.text=\r\n\ Similar\ functionality\ to\ the\ GapBuffer\ class,\ but\ it\ replaces\ the\ array\ with\ a\ linked\ list\r\n\r\n\ @author\ Alexander\ Labell\r\n\ @version\ 1.1\r\n
comment1.params=
comment1.target=LinkedListBuffer()
comment10.params=
comment10.target=boolean\ cursor_left()
comment10.text=\r\n\ The\ cursor_left\ method\ will\ move\ the\ cursor\ one\ character\ to\ the\ left\r\n\r\n\ @return\ boolean\r\n
comment11.params=char_count
comment11.target=boolean\ cursor_left(int)
comment11.text=\r\n\ The\ cursor_left\ method\ will\ move\ the\ cursor\ char_count\ characters\ to\ the\ left\r\n\r\n\ @param\ char_count\r\n\ @return\ boolean\r\n
comment12.params=
comment12.target=boolean\ cursor_right()
comment12.text=\r\n\ The\ cursor_right\ method\ will\ move\ the\ cursor\ a\ single\ character\ to\ the\ right\r\n\r\n\ @return\ boolean\r\n
comment13.params=char_count
comment13.target=boolean\ cursor_right(int)
comment13.text=\r\n\ The\ cursor_right\ method\ will\ move\ the\ cursor\ char_count\ to\ the\ right\r\n\r\n\ @param\ char_count\r\n\ @return\ boolean\r\n
comment14.params=
comment14.target=boolean\ cursor_move_start_line()
comment14.text=\r\n\ The\ cursor_move_start_line\ method\ will\ move\ the\ cursor\ to\ the\ first\ position\ in\ the\ linked\ list\r\n\r\n\ @return\ boolean\r\n
comment15.params=
comment15.target=boolean\ cursor_move_end_line()
comment15.text=\r\n\ The\ cursor_move_end_line\ method\ will\ move\ the\ cursor\ to\ the\ last\ position\ in\ the\ linked\ list\r\n\r\n\ @return\ boolean\r\n
comment16.params=
comment16.target=boolean\ remove_char_toleft()
comment16.text=\r\n\ The\ remove_char_toleft\ method\ will\ remove\ one\ character\ to\ the\ left\ of\ the\ cursor\ position.\r\n\r\n\ @return\ boolean\r\n
comment17.params=char_count
comment17.target=boolean\ remove_char_toleft(int)
comment17.text=\r\n\ The\ remove_char_toleft\ method\ will\ remove\ char_count\ characters\ to\ the\ left\ of\ the\ cursor\ position.\r\n\r\n\ @return\ boolean\r\n
comment18.params=str_value
comment18.target=boolean\ insert_text(java.lang.String)
comment18.text=\r\n\ The\ insert_text\ method\ will\ add\ a\ string\ at\ the\ current\ cursor\ position.\r\n\r\n\ @return\ boolean\r\n
comment19.params=char_value
comment19.target=boolean\ insert_text(char)
comment19.text=\r\n\ The\ insert_text\ method\ will\ add\ a\ character\ to\ the\ current\ cursor\ position.\r\n\r\n\ @param\ char_value\ \ \ \ the\ character\ to\ insert\r\n\ @return\ boolean\r\n
comment2.params=str_value
comment2.target=void\ load_string(java.lang.String)
comment2.text=\r\n\ The\ load_string\ method\ will\ load\ a\ string\ into\ the\ class,\ removing\ a\ previously\ stored\r\n\ updating\ the\ str\ field\ and\ call\ init_populate\r\n\r\n\ @param\ \ str_value\ \ a\ string\r\n\ @return\ \ void\r\n
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=\r\n\ Returns\ the\ stored\ string\ without\ the\ empty\ space.\r\n\r\n\ @param\r\n\ @return\ \ \ \ \ \ The\ string\ in\ field\ str\r\n
comment4.params=
comment4.target=java.lang.String\ getString()
comment4.text=\r\n\ The\ getString\ method\ will\ return\ a\ string\ representation\ of\ the\ linked\ list.\r\n\r\n\ @return\ String\r\n
comment5.params=
comment5.target=void\ format()
comment6.params=
comment6.target=int\ length()
comment6.text=\r\n\ The\ length\ method\ will\ return\ the\ length\ of\ the\ string\r\n\r\n\ @return\ int\r\n
comment7.params=
comment7.target=int\ cursor_position()
comment7.text=\r\n\ The\ cursor_position\ method\ will\ return\ the\ current\ cursor\ postion\r\n\r\n\ @return\ int\r\n
comment8.params=cp
comment8.target=void\ set_cursor_position(int)
comment9.params=
comment9.target=void\ init_populate()
comment9.text=\r\n\ The\ init_populate\ method\ will\ populate\ the\ data\ structure\ initially\r\n\r\n\ @return\ void\r\n
numComments=20
