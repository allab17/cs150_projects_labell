#BlueJ class context
comment0.target=Clock
comment0.text=\r\n\ Clock\ will\ intialize\ warehouses,\ trucks,\ shipments,\ the\ priority\ queue\ of\ manifest\ items.\ It\ will\ count\ the\ hours,\ each\ hour\r\n\ all\ the\ trucks'\ action\ methods\ are\ called\ to\ either\ move\ toward\ a\ source,\ destination,\ pickup\ or\ unload\ accordingly.\ The\ action\ method\r\n\ of\ each\ warehouse\ will\ also\ be\ called\ to\ handle\ the\ situation\ at\ the\ loading\ docks\ to\ either\ accept\ shipments\ that\ are\ being\ unloaded\r\n\ or\ pickup\ shipments\ for\ the\ current\ truck\ at\ the\ loading\ docks.\r\n\r\n\ @author\ Alexander\ Labell\r\n\ @version\ 1.0\r\n
comment1.params=dmc\ sb_g\ sb_t\ sb_w\ num_warehouses\ warehouse_width\ warehouse_height\ num_trucks\ manifest_size\ x_constraint_max\ y_constraint_max
comment1.target=Clock(DynamicMapCntrl,\ java.lang.StringBuilder,\ java.lang.StringBuilder,\ java.lang.StringBuilder,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment10.params=
comment10.target=void\ init_warehouses()
comment10.text=\r\n\ Initialize\ the\ warehouses\ array,\ for\ each\ warehouse\ give\ it\ a\ random\ position\ within\ the\ world\ and\ give\ each\ warehouse\r\n\ a\ reference\ to\ the\ clock\ object\ as\ well\ as\ the\ width\ and\ height\ of\ the\ warehouse.\r\n\ \r\n
comment11.params=trucks
comment11.target=void\ init_shipments(Truck[])
comment11.text=\r\n\ Initialize\ the\ shipments.\ Generate\ the\ shipments\ at\ each\ warehouse\ depending\ on\ the\ manifest\ within\ each\ truck.\r\n\ \r\n
comment12.params=
comment12.target=void\ init_priority_queue()
comment12.text=\r\n\ Initialize\ the\ priority\ queue\ of\ manifest\ items\ by\ copying\ the\ array\ of\ manifest\ items\ within\ the\ manifest\ for\ each\ truck\ to\ a\ \r\n\ priority\ queue\ that\ is\ created\ for\ each\ truck.\r\n\ \r\n
comment13.params=
comment13.target=void\ inc_shipment_base_adr()
comment13.text=\r\n\ Increment\ the\ base\ address\ of\ shipment\ objects\ as\ they\ are\ created.\r\n\ \r\n
comment14.params=
comment14.target=int\ get_shipment_base_adr()
comment14.text=\r\n\ Get\ the\ base\ address\ of\ shipment\ objects.\r\n\ \r\n\ @return\ shipment\ base\ address\r\n
comment2.params=sb_g
comment2.target=void\ csv_general_data(java.lang.StringBuilder)
comment2.text=\r\n\ \ Method\ for\ adding\ general\ data\ to\ the\ CSV\ file\r\n\r\n\ @param\ \ \ StringBuilder\ object\r\n
comment3.params=trucks
comment3.target=boolean\ check_done(Truck[])
comment3.text=\r\n\ Checks\ if\ all\ trucks\ have\ picked\ up\ and\ delivered\ all\ items\ in\ their\ manifest.\r\n\r\n\ @return\ \ \ true\ or\ false\ whether\ all\ trucks\ have\ completed\ their\ pickups\ and\ deliveries\r\n
comment4.params=
comment4.target=int\ get_hour()
comment5.params=
comment5.target=void\ count_hour()
comment5.text=\r\n\ Increments\ the\ hours,\ looping\ through\ all\ trucks\ and\ warehouses\ and\ calling\ the\ action\ method\ every\ hour.\r\n\ If\ check_done\ evaluates\ to\ true\ we\ stop\ counting\ hours.\r\n\r\n
comment6.params=
comment6.target=Truck[]\ get_trucks()
comment6.text=\r\n\ Get\ trucks\r\n\ \r\n\ @return\ \ \ \ \ array\ of\ trucks\r\n
comment7.params=
comment7.target=Warehouse[]\ get_warehouses()
comment7.text=\r\n\ Get\ warehouses\r\n\ \r\n\ @return\ \ \ \ \ array\ of\ warehouses\r\n
comment8.params=
comment8.target=void\ init_trucks()
comment8.text=\r\n\ Initialize\ the\ trucks\ array,\ for\ each\ truck\ give\ it\ a\ random\ position\ within\ the\ world,\ a\ reference\ to\ the\ clock\ object\ and\ dynamic\ map\r\n\ so\ that\ the\ truck\ can\ be\ refreshed\ after\ the\ move\ method\ is\ called.\r\n\ \r\n
comment9.params=
comment9.target=void\ init_highest_priority_manifest()
comment9.text=\r\n\ Initialize\ the\ current\ manifest\ item\ for\ each\ truck,\ this\ will\ act\ as\ the\ first\ pickup\ for\ each\ truck.\r\n\ \r\n
numComments=15
